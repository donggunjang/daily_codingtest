#투 포인터 알고리즘
#리스트에 순차적으로 접근해야할 때 2개의 점의 위치를 기록하면서 처리하는 알고리즘
#투 포인터 알고리즘의 특징은 2개의 변수를 이용해 리스트 상의 위치를 기록한다는 점
"""
특정한 합을 가지는 부분 연속 수열 찾기
양의 정수로만 구성된 리스트가 주어 졌을때, 그부분 연속 수열 중에서 '특정한 합을' 
갖는 수열의 개수를 출력하는 문제
"""
"""
1. 시작점과 끝점이 첫 번째 원소의 인덱스(0)을 가리키도록 한다.
2. 현재 부분합이 M과 같다면 카운트한다.
3. 현재 부분합이 M보다 작으면 end를 1 증가 시킨다.
4. 현재 부분합이 M보다 크거나 같으면 start를 1 증가시킨다.
5. 모든 경우를 확인할 때까지 2번 부터 4번까지의 과정을 반복한다.
"""

n = 5 #데이터 개 N
m = 5 #원하는 부분합
data = [1,2,3,2,5] #전체 수열

count = 0
sum = 0
end = 0

for start in range(n): #start를 차례대로 증가시키면서 반복
    #end를 가능한 만큼 이동 시키기
    while sum < m and end < n:
        sum += data[end]
        end +=1
    # 부분합이 m일때 카운트 증가
    if sum == m:
        count += 1
    sum -= data[start]

print(count)