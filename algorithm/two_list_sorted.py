#정렬되어 있는 두 리스트의 합집합 알고리즘
"""
이미 정렬되어 있는 2개의 리스트가 입력으로 주어질때, 
두리스트의 모든 원소를 합쳐서 정렬한 결과를 계산
"""
"""
1 정렬된 리스트 A와B를 입력받는다
2 리스트 A에서 처리되지 않은 원소 중 가장 작은 원소를 i가 가르키도록 한다.
3 리스트 B에서 처리되지 않은 원소중 가장 작은 원소를 j가 가르키도록 한다.
4 A[i]와 B[j] 중에서 더 작은 원소를 결과 리스트에 담는다.
5 리스트 A와 B에서 더 이상 처리할 원소가 없을 때까지  2~4번 과정을 반복한다.
"""

#사전에 정렬된 리스트 a와 b 선언3
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

#리스트 A와 B의 모든 원소를 담을 수 있는 크기의 결과 리스트 초기화
result = [0] * (n+m)
i = 0
j = 0
k = 0

# 모든 원소가 결과 리스트에 담길때 까지 반복
while i < n or j < m:
    #리스트 B의 모든 원소가 처리되었거나, 리스트 A의 원소가 더 작을 때
    if j >= m or (i < n and a[i] <= b[j]):
        result[k] = a[i]
        i += 1
    #리스트 A의 모든 원소가 처리되었거나, 리스트 B의 원소가 더 작을 때
    else:
        #리스트 B의 원소를 결과 리스트로 옮기기
        result[k] = b[j]
        j += 1
    k += 1

#결과 리스트 출력
for i in result:
    print(i, end=' ')
